server:
  port: 19094

spring:
  application:
    name: order-service

  data:
    redis:
      host: localhost
      port: 6379
      username: default
      password: systempass

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/orders
    username: delivery
    password: delivery777

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_batch_fetch_size: 1000

eureka:
  client:
    service-url:
      defaultZone: http://localhost:19090/eureka/
  instance:
    hostname: localhost

# springdoc-openapi-ui
springdoc:
  api-docs:
    version: openapi_3_1
    enabled: true
    path: /v3/api-docs
    # 게이트웨이 라우팅에서 prefix를 제거하지 않았다면 해당 설정을 추가
  enable-spring-security: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

management:
  endpoints:
    web:
      exposure:
        include: refresh
  management:
    zipkin:
      tracing:
        endpoint: "http://localhost:9411/api/v2/spans"
    tracing:
      sampling:
        probability: 1.0

# Naver Direction API
naver:
  direction:
    client-id: ${DIRECTION_CLIENT_ID}
    client-secret: ${DIRECTION_CLIENT_SECRET}

# resillience4j
resilience4j:
  retry:
    instances:
      createHubRoute:
        maxAttempts: 3       # 최대 재시도 횟수
        waitDuration: 2s     # 각 재시도 사이의 대기 시간
        retryExceptions:
          - java.net.SocketTimeoutException # 재시도를 수행할 예외 타입
          - java.io.IOException
