server:
  port: 19093

spring:
  application:
    name: auth-service

  data:
    redis:
      host: localhost
      port: 6379
      username: default
      password: systempass

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/auth
    username: delivery
    password: delivery777

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_batch_fetch_size: 1000

eureka:
  client:
    service-url:
      defaultZone: http://localhost:19090/eureka/
  instance:
    hostname: localhost

jwt:
  access-expiration: 3600000
  secret-key: "7Iqk7YyM66W07YOA7L2U65Sp7YG065-9U3ByaW5n6rCV7J2Y7Yqc7YSw7LWc7JuQ67mI7J6F64uI64ukLg=="
  admin-token: AIzaSyBZFANrsha1UH5CaSDUxtfdXaTQ5yOtPhE

# springdoc-openapi-ui
springdoc:
  api-docs:
    version: openapi_3_1
    enabled: true
    path: /v3/api-docs
    # 게이트웨이 라우팅에서 prefix를 제거하지 않았다면 해당 설정을 추가
  enable-spring-security: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

management:
  endpoints:
    web:
      exposure:
        include: refresh
  management:
    zipkin:
      tracing:
        endpoint: "http://localhost:9411/api/v2/spans"
    tracing:
      sampling:
        probability: 1.0